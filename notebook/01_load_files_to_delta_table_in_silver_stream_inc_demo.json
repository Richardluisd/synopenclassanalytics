{
	"name": "01_load_files_to_delta_table_in_silver_stream_inc_demo",
	"properties": {
		"folder": {
			"name": "Data Process"
		},
		"nbformat": 4,
		"nbformat_minor": 2,
		"bigDataPool": {
			"referenceName": "DataProcess",
			"type": "BigDataPoolReference"
		},
		"sessionProperties": {
			"driverMemory": "56g",
			"driverCores": 8,
			"executorMemory": "56g",
			"executorCores": 8,
			"numExecutors": 2,
			"runAsWorkspaceSystemIdentity": false,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2",
				"spark.autotune.trackingId": "14cdb6a7-640f-463d-9287-4455ddc5c1e8"
			}
		},
		"metadata": {
			"saveOutput": true,
			"synapse_widget": {
				"version": "0.1"
			},
			"enableDebugMode": false,
			"kernelspec": {
				"name": "synapse_pyspark",
				"display_name": "Synapse PySpark"
			},
			"language_info": {
				"name": "python"
			},
			"a365ComputeOptions": {
				"id": "/subscriptions/edc28f36-9160-4500-b465-77e4ca43b417/resourceGroups/rg-openclassanalytics/providers/Microsoft.Synapse/workspaces/synopenclassanalytics/bigDataPools/DataProcess",
				"name": "DataProcess",
				"type": "Spark",
				"endpoint": "https://synopenclassanalytics.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/DataProcess",
				"auth": {
					"type": "AAD",
					"authResource": "https://dev.azuresynapse.net",
					"authHeader": null
				},
				"sparkVersion": "3.1",
				"nodeCount": 10,
				"cores": 8,
				"memory": 56,
				"extraHeader": null
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "markdown",
				"source": [
					"## 01_load_csv_files_to_delta_table_in_silver_stream_inc\n",
					"\n",
					"Manual notebook for the first load where many files have to be processed\n",
					""
				],
				"attachments": null
			},
			{
				"cell_type": "markdown",
				"source": [
					"**Includes**"
				],
				"attachments": null
			},
			{
				"cell_type": "code",
				"source": [
					"%run includes/common_functions"
				],
				"attachments": null,
				"execution_count": 5
			},
			{
				"cell_type": "code",
				"source": [
					"%run includes/stream_functions"
				],
				"attachments": null,
				"execution_count": 6
			},
			{
				"cell_type": "code",
				"source": [
					"%run includes/storage_mng_functions"
				],
				"attachments": null,
				"execution_count": 4
			},
			{
				"cell_type": "markdown",
				"source": [
					"**Parameters**"
				],
				"attachments": null
			},
			{
				"cell_type": "code",
				"metadata": {
					"tags": [
						"parameters"
					]
				},
				"source": [
					"# Entity Parameters \n",
					"database = \"Cornerchy\"\n",
					"table = \"Sales\"\n",
					"entity = \"\"\n",
					"primarykey = \"SaleLineId\"\n",
					"partitionBy = \"Date\"\n",
					"level = \"month\"\n",
					"cleanSpecialChar = False\n",
					"metadata_columns = \"load_date,type_process,filename\"\n",
					"\n",
					"# Process Parameters\n",
					"period = \"*/*/*\"\n",
					"source_folder= \"Cornerchy_OLTP/Sales/\"\n",
					"path_source = \"abfss://raw@adlsopenclassanalytics.dfs.core.windows.net/\"\n",
					"path_destination = \"abfss://std@adlsopenclassanalytics.dfs.core.windows.net/\"\n",
					"\n",
					"repartition_num_files = 1\n",
					"typeProcess = \"inc\" "
				],
				"attachments": null,
				"execution_count": 7
			},
			{
				"cell_type": "markdown",
				"source": [
					"**Generation of constants**"
				],
				"attachments": null
			},
			{
				"cell_type": "code",
				"source": [
					"maxFilesPerTrigger = 1\n",
					"\n",
					"path_source_completed = f\"{path_source}{source_folder}{period}/{entity}\"\n",
					"path_destination_completed = f\"{path_destination}{database}/{table}\"\n",
					"path_deltaCheckpointPath=f\"{path_destination}{database}/{table}_CheckpointFolder\"\n",
					"\n",
					"print(path_source_completed)\n",
					"print(path_destination_completed)\n",
					"print(path_deltaCheckpointPath)"
				],
				"attachments": null,
				"execution_count": 8
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"**Main load with append**"
				],
				"attachments": null
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"dfProcStream=append_stream_trigger_one(path_source_completed, path_deltaCheckpointPath, path_destination_completed)"
				],
				"attachments": null,
				"execution_count": 11
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"**Main load inc Trigger One Error**"
				],
				"attachments": null
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"dfProcStream=inc_stream_trigger_one(path_source_completed, path_deltaCheckpointPath, primarykey, metadata_columns, partitionBy, level, path_destination_completed, repartition_num_files)"
				],
				"attachments": null,
				"execution_count": 9
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"**Main load inc with foreach per file**"
				],
				"attachments": null
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"dfProcStream=inc_stream_one_file_per_trigger(path_source_completed, path_deltaCheckpointPath, primarykey, metadata_columns, partitionBy, level, path_destination_completed, repartition_num_files)"
				],
				"attachments": null,
				"execution_count": 10
			},
			{
				"cell_type": "markdown",
				"source": [
					"**Main rest of loads**"
				],
				"attachments": null
			},
			{
				"cell_type": "code",
				"source": [
					"import time\n",
					"\n",
					"if checkDeltaFolder(path_destination_completed):\n",
					"    dfProcStream=inc_stream_one_file_per_trigger(path_source_completed, path_deltaCheckpointPath, primarykey, metadata_columns, partitionBy, level, path_destination_completed, repartition_num_files)\n",
					"else:\n",
					"    dfProcStream=first_load_stream_last_file(path_source_completed, path_deltaCheckpointPath, primarykey, metadata_columns, partitionBy, level, path_destination_completed, repartition_num_files, maxFilesPerTrigger)\n",
					"\n",
					"time.sleep(15)"
				],
				"attachments": null,
				"execution_count": 31
			},
			{
				"cell_type": "markdown",
				"source": [
					"**Stop stream**"
				],
				"attachments": null
			},
			{
				"cell_type": "code",
				"source": [
					"import time\n",
					"print(dfProcStream.isActive)\n",
					"print(dfProcStream.status)\n",
					"\n",
					"while dfProcStream.status[\"isDataAvailable\"]:\n",
					"    print(\"wait for load stream...\")\n",
					"    time.sleep(30)\n",
					"print(\"stopping stream...\")\n",
					"dfProcStream.stop()"
				],
				"attachments": null,
				"execution_count": 11
			},
			{
				"cell_type": "markdown",
				"source": [
					"**Storage MNG**"
				],
				"attachments": null
			},
			{
				"cell_type": "code",
				"source": [
					"compact_delta_table_storage(path_destination_completed, repartition_num_files)"
				],
				"attachments": null,
				"execution_count": null
			}
		]
	}
}