{
	"name": "Demo_08_uso_conector_dedicado",
	"properties": {
		"description": "Ejemplo de ingesta sobre pool dedicado mediante el conecto Apache Spark",
		"folder": {
			"name": "Demos"
		},
		"nbformat": 4,
		"nbformat_minor": 2,
		"bigDataPool": {
			"referenceName": "DataProcess",
			"type": "BigDataPoolReference"
		},
		"sessionProperties": {
			"driverMemory": "28g",
			"driverCores": 4,
			"executorMemory": "28g",
			"executorCores": 4,
			"numExecutors": 1,
			"runAsWorkspaceSystemIdentity": false,
			"conf": {
				"spark.dynamicAllocation.enabled": "true",
				"spark.dynamicAllocation.minExecutors": "1",
				"spark.dynamicAllocation.maxExecutors": "3",
				"spark.autotune.trackingId": "ec69c0f0-9f52-4a87-a6d7-214a49fb67d6"
			}
		},
		"metadata": {
			"saveOutput": true,
			"synapse_widget": {
				"version": "0.1",
				"state": {
					"46aaff54-d280-44a4-9998-c2419a07c97b": {
						"type": "Synapse.DataFrame",
						"sync_state": {
							"table": {
								"rows": [
									{
										"0": "2364584",
										"1": "10896387",
										"2": "4",
										"3": "-",
										"4": "55479CE7-923A-4BF7",
										"5": "2019-01-03 10:23:08",
										"6": "2019-01-03",
										"7": "20190103",
										"8": "1023",
										"9": "911",
										"10": "02000518",
										"11": "118FFD3C92FD44E682C2",
										"12": "2.000000",
										"13": "0.0352",
										"14": "0.5700",
										"15": "U",
										"16": "2019-07-21 10:23:08.25",
										"17": "abfss://raw@adlsopenclassanalytics.dfs.core.windows.net/Cornerchy_OLTP/Sales/2019/01/03/sales_2019_01_03.parquet",
										"18": "2019",
										"19": "01",
										"20": "2022-09-15 14:15:54.499",
										"21": "inc"
									},
									{
										"0": "2364585",
										"1": "10896393",
										"2": "4",
										"3": "-",
										"4": "B1710325-425A-4183",
										"5": "2019-01-03 10:23:08",
										"6": "2019-01-03",
										"7": "20190103",
										"8": "1023",
										"9": "002",
										"10": "09004295",
										"11": "4DF7DF0D86E7497080C5",
										"12": "7.000000",
										"13": "0.0352",
										"14": "1.0267",
										"15": "U",
										"16": "2019-07-21 10:23:08.983",
										"17": "abfss://raw@adlsopenclassanalytics.dfs.core.windows.net/Cornerchy_OLTP/Sales/2019/01/03/sales_2019_01_03.parquet",
										"18": "2019",
										"19": "01",
										"20": "2022-09-15 14:15:54.499",
										"21": "inc"
									},
									{
										"0": "2364606",
										"1": "10896505",
										"2": "3",
										"3": "-",
										"4": "89C4BB9A-A18E-432E",
										"5": "2019-01-03 10:23:20",
										"6": "2019-01-03",
										"7": "20190103",
										"8": "1023",
										"9": "002",
										"10": "09002936",
										"11": "34D0B8BEE414448DA0D8",
										"12": "7.000000",
										"13": "0.0352",
										"14": "0.0000",
										"15": "U",
										"16": "2019-07-21 10:23:20.01",
										"17": "abfss://raw@adlsopenclassanalytics.dfs.core.windows.net/Cornerchy_OLTP/Sales/2019/01/03/sales_2019_01_03.parquet",
										"18": "2019",
										"19": "01",
										"20": "2022-09-15 14:15:54.499",
										"21": "inc"
									},
									{
										"0": "2364763",
										"1": "10897270",
										"2": "4",
										"3": "-",
										"4": "3C21077E-2E58-4CAA",
										"5": "2019-01-03 10:24:51",
										"6": "2019-01-03",
										"7": "20190103",
										"8": "1024",
										"9": "009",
										"10": "09003257",
										"11": "A1AFC9C812B24FAC99C5",
										"12": "10.000000",
										"13": "0.0352",
										"14": "0.0000",
										"15": "U",
										"16": "2019-07-21 10:24:51.06",
										"17": "abfss://raw@adlsopenclassanalytics.dfs.core.windows.net/Cornerchy_OLTP/Sales/2019/01/03/sales_2019_01_03.parquet",
										"18": "2019",
										"19": "01",
										"20": "2022-09-15 14:15:54.499",
										"21": "inc"
									},
									{
										"0": "2364814",
										"1": "10897537",
										"2": "8",
										"3": "-",
										"4": "AF2B127D-AAE9-4DE0",
										"5": "2019-01-03 10:25:21",
										"6": "2019-01-03",
										"7": "20190103",
										"8": "1025",
										"9": "003",
										"10": "10100205",
										"11": "C148968FD4A14475B154",
										"12": "12.000000",
										"13": "0.0352",
										"14": "9.6200",
										"15": "U",
										"16": "2019-07-21 10:25:21.277",
										"17": "abfss://raw@adlsopenclassanalytics.dfs.core.windows.net/Cornerchy_OLTP/Sales/2019/01/03/sales_2019_01_03.parquet",
										"18": "2019",
										"19": "01",
										"20": "2022-09-15 14:15:54.499",
										"21": "inc"
									},
									{
										"0": "2364849",
										"1": "10897698",
										"2": "2",
										"3": "-",
										"4": "A8178481-602D-4617",
										"5": "2019-01-03 10:25:41",
										"6": "2019-01-03",
										"7": "20190103",
										"8": "1025",
										"9": "005",
										"10": "09004461",
										"11": "26232F86E70D4E3EBF25",
										"12": "10.000000",
										"13": "0.0352",
										"14": "3.0931",
										"15": "U",
										"16": "2019-07-21 10:25:41.46",
										"17": "abfss://raw@adlsopenclassanalytics.dfs.core.windows.net/Cornerchy_OLTP/Sales/2019/01/03/sales_2019_01_03.parquet",
										"18": "2019",
										"19": "01",
										"20": "2022-09-15 14:15:54.499",
										"21": "inc"
									},
									{
										"0": "2364873",
										"1": "10897805",
										"2": "2",
										"3": "-",
										"4": "7DD73145-F209-47AD",
										"5": "2019-01-03 10:25:55",
										"6": "2019-01-03",
										"7": "20190103",
										"8": "1025",
										"9": "005",
										"10": "12000110",
										"11": "5C15FA93B6B74633918F",
										"12": "2.000000",
										"13": "0.0352",
										"14": "40.3500",
										"15": "U",
										"16": "2019-07-21 10:25:55.277",
										"17": "abfss://raw@adlsopenclassanalytics.dfs.core.windows.net/Cornerchy_OLTP/Sales/2019/01/03/sales_2019_01_03.parquet",
										"18": "2019",
										"19": "01",
										"20": "2022-09-15 14:15:54.499",
										"21": "inc"
									},
									{
										"0": "2364881",
										"1": "10897849",
										"2": "2",
										"3": "-",
										"4": "BDF89A37-04D2-415F",
										"5": "2019-01-03 10:25:59",
										"6": "2019-01-03",
										"7": "20190103",
										"8": "1025",
										"9": "002",
										"10": "07000092",
										"11": "1417B871F9514C2CA60C",
										"12": "12.000000",
										"13": "0.0352",
										"14": "0.0000",
										"15": "U",
										"16": "2019-07-21 10:25:59.733",
										"17": "abfss://raw@adlsopenclassanalytics.dfs.core.windows.net/Cornerchy_OLTP/Sales/2019/01/03/sales_2019_01_03.parquet",
										"18": "2019",
										"19": "01",
										"20": "2022-09-15 14:15:54.499",
										"21": "inc"
									},
									{
										"0": "2364982",
										"1": "10898345",
										"2": "1",
										"3": "-",
										"4": "2E5D2064-4BB7-4A4F",
										"5": "2019-01-03 10:26:57",
										"6": "2019-01-03",
										"7": "20190103",
										"8": "1026",
										"9": "001",
										"10": "02001523",
										"11": "2AFF347263BB4148BB12",
										"12": "7.000000",
										"13": "0.0352",
										"14": "17.6200",
										"15": "U",
										"16": "2019-07-21 10:26:57.88",
										"17": "abfss://raw@adlsopenclassanalytics.dfs.core.windows.net/Cornerchy_OLTP/Sales/2019/01/03/sales_2019_01_03.parquet",
										"18": "2019",
										"19": "01",
										"20": "2022-09-15 14:15:54.499",
										"21": "inc"
									},
									{
										"0": "2365020",
										"1": "10898532",
										"2": "2",
										"3": "-",
										"4": "0CB20976-F27D-4323",
										"5": "2019-01-03 10:27:20",
										"6": "2019-01-03",
										"7": "20190103",
										"8": "1027",
										"9": "901",
										"10": "07000692",
										"11": "F0260870A7F145F7910E",
										"12": "2.000000",
										"13": "0.0352",
										"14": "5.4900",
										"15": "U",
										"16": "2019-07-21 10:27:20.103",
										"17": "abfss://raw@adlsopenclassanalytics.dfs.core.windows.net/Cornerchy_OLTP/Sales/2019/01/03/sales_2019_01_03.parquet",
										"18": "2019",
										"19": "01",
										"20": "2022-09-15 14:15:54.499",
										"21": "inc"
									}
								],
								"schema": [
									{
										"key": "0",
										"name": "SaleId",
										"type": "int"
									},
									{
										"key": "1",
										"name": "SaleLineId",
										"type": "bigint"
									},
									{
										"key": "2",
										"name": "InvoiceLine",
										"type": "int"
									},
									{
										"key": "3",
										"name": "OldTicket",
										"type": "string"
									},
									{
										"key": "4",
										"name": "InvoiceCode",
										"type": "string"
									},
									{
										"key": "5",
										"name": "DateTime",
										"type": "timestamp"
									},
									{
										"key": "6",
										"name": "Date",
										"type": "date"
									},
									{
										"key": "7",
										"name": "DateKey",
										"type": "int"
									},
									{
										"key": "8",
										"name": "HourKey",
										"type": "int"
									},
									{
										"key": "9",
										"name": "StoreCode",
										"type": "string"
									},
									{
										"key": "10",
										"name": "ProductCode",
										"type": "string"
									},
									{
										"key": "11",
										"name": "CustomerCode",
										"type": "string"
									},
									{
										"key": "12",
										"name": "Quantity",
										"type": "decimal"
									},
									{
										"key": "13",
										"name": "SalePrice",
										"type": "decimal"
									},
									{
										"key": "14",
										"name": "PurchasePrice",
										"type": "decimal"
									},
									{
										"key": "15",
										"name": "UnitMeasure",
										"type": "string"
									},
									{
										"key": "16",
										"name": "LoadDate",
										"type": "timestamp"
									},
									{
										"key": "17",
										"name": "filename",
										"type": "string"
									},
									{
										"key": "18",
										"name": "Date_year",
										"type": "int"
									},
									{
										"key": "19",
										"name": "Date_month",
										"type": "string"
									},
									{
										"key": "20",
										"name": "load_date",
										"type": "timestamp"
									},
									{
										"key": "21",
										"name": "type_process",
										"type": "string"
									}
								],
								"truncated": false
							},
							"isSummary": false,
							"language": "scala"
						},
						"persist_state": {
							"view": {
								"type": "details",
								"chartOptions": {
									"chartType": "bar",
									"aggregationType": "sum",
									"categoryFieldKeys": [
										"1"
									],
									"seriesFieldKeys": [
										"0"
									],
									"isStacked": false
								}
							}
						}
					}
				}
			},
			"enableDebugMode": false,
			"kernelspec": {
				"name": "synapse_pyspark",
				"display_name": "Synapse PySpark"
			},
			"language_info": {
				"name": "python"
			},
			"a365ComputeOptions": {
				"id": "/subscriptions/edc28f36-9160-4500-b465-77e4ca43b417/resourceGroups/rg-openclassanalytics/providers/Microsoft.Synapse/workspaces/synopenclassanalytics/bigDataPools/DataProcess",
				"name": "DataProcess",
				"type": "Spark",
				"endpoint": "https://synopenclassanalytics.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/DataProcess",
				"auth": {
					"type": "AAD",
					"authResource": "https://dev.azuresynapse.net",
					"authHeader": null
				},
				"sparkVersion": "3.1",
				"nodeCount": 3,
				"cores": 8,
				"memory": 56,
				"extraHeader": null
			},
			"sessionKeepAliveTimeout": 120
		},
		"cells": [
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# **Ejemplo de ingesta sobre pool dedicado mediante conector Apache Spark**"
				]
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"### Añadimos la referencia a las librerías necesarias"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"import com.microsoft.spark.sqlanalytics\r\n",
					"from com.microsoft.spark.sqlanalytics.Constants import Constants"
				],
				"execution_count": 1
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"### Parámetros y valores que necesitaremos"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# Definimos la ruta donde se encuentran los datos de ventas dentro del data lake\r\n",
					"adls_sales_data_path = \"abfss://std@adlsopenclassanalytics.dfs.core.windows.net/Cornerchy/Sales/\"\r\n",
					"\r\n",
					"# Punto de conexión para nuestro pool dedicado\r\n",
					"dpool_endpoint = \"synopenclassanalytics.sql.azuresynapse.net\"\r\n",
					"\r\n",
					"# Ruta de almacenamiento temporal utilizada durante la ingesta\r\n",
					"adls_tmp_storage = \"abfss://synapsews@adlsopenclassanalytics.dfs.core.windows.net/conector_tmp_staging/\"\r\n",
					"\r\n",
					"# Base de datos, esquema y tabla sobre la que deseamos volcar\r\n",
					"dpool_database_target = \"SummitDedicatedPool.dbo.Ejemplo_ingesta_conector\""
				],
				"execution_count": 2
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"### Preparación del dataframe"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"# Leemos la información de ventas de la capa estándar en formato delta (para el ejemplo limitada a las 10000 primeras filas)\r\n",
					"sales_sample_data = spark.read.format(\"delta\").load(adls_sales_data_path).limit(10000)\r\n",
					"\r\n",
					"# Muestra de las 10 primeras filas leídas\r\n",
					"display(sales_sample_data.limit(10))"
				],
				"execution_count": 3
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"### Escritura sobre el pool dedicado"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# Configuración de la solicitud para escribir sobre pool SQL dedicado de Synapse\r\n",
					"# En este caso, nos basamos en un volcado vía autenticación a través de AAD sobre una tabla interna\r\n",
					"(sales_sample_data.write\r\n",
					" # Proporcionamos el endpoint para la conexión contra el pool dedicado\r\n",
					" .option(Constants.SERVER, dpool_endpoint)\r\n",
					" # Opcionalmente, podemos especificar una ruta temporal de almacenamiento utilizada durante la escritura\r\n",
					" .option(Constants.TEMP_FOLDER, adls_tmp_storage)\r\n",
					" # Especificamos el método de volcado según lo que precisemos\r\n",
					" # las opciones disponibles son \"error\" or \"errorifexists\" (método por defecto), \"overwrite\", \"append\", \"ignore\".\r\n",
					" # Para nuestro caso seleccionaremos el modo \"overwrite\" para sobrescribir la información existente\r\n",
					" # podemos encontrar más información en https://spark.apache.org/docs/latest/sql-data-sources-load-save-functions.html#save-modes\r\n",
					" .mode(\"overwrite\")\r\n",
					" # Obligatoriamente, deberemos especificar la tabla y esquema sobre la que vamos a escribir, incluyendo la base de datos\r\n",
					" .synapsesql(dpool_database_target, Constants.INTERNAL))"
				],
				"execution_count": 4
			}
		]
	}
}